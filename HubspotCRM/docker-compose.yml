# Docker Compose configuration for HubSpot CRM

services:
  # PostgreSQL Database
  postgres:
    image: postgres:13-alpine
    container_name: hubspot_postgres
    environment:
      POSTGRES_DB: hubspot_db
      POSTGRES_USER: hubspot_user
      POSTGRES_PASSWORD: hubspot_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - hubspot_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hubspot_user -d hubspot_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Flask Application
  web:
    build: .
    container_name: hubspot_web
    environment:
      - FLASK_APP=app:create_app
      - FLASK_ENV=production
      - FLASK_DEBUG=False
      - DB_USER=hubspot_user
      - DB_PASSWORD=hubspot_password
      - DB_HOST=postgres
      - DB_NAME=hubspot_db
      - SECRET_KEY=your-super-secret-key-change-in-production
      - HUBSPOT_API_TOKEN=${HUBSPOT_API_TOKEN}
      - DEFAULT_PAGE_SIZE=10
      - MAX_PAGE_SIZE=100
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - hubspot_network
    volumes:
      - ./logs:/app/logs
    # Use the entrypoint script instead of command override

  # Redis (optional, for caching)
  redis:
    image: redis:6-alpine
    container_name: hubspot_redis
    ports:
      - "6379:6379"
    networks:
      - hubspot_network
    volumes:
      - redis_data:/data
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  hubspot_network:
    driver: bridge
